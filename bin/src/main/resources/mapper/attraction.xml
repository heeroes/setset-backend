<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.heeroes.setset.attraction.model.mapper.AttractionMapper">
	<!-- 여행지 키워드 검색 (여행지 타입 지정 또는 미지정)  -->
	<select id="searchByKeyword" parameterType="map" resultType="attraction">
		select id, title, content_type_id, addr, image, latitude, longitude, overview, popularity
		<choose>
			<when test="contentTypeId != null or contentTypeId != 0">
				<include refid="searchContentType"></include>
			</when>
			<otherwise>
				<include refid="searchNoneType"></include>
			</otherwise>
		</choose>
	</select>
	
	<sql id="searchContentType">
		from attraction
		<include refid="keywordCondition"></include>
			  and content_type_id = #{contentTypeId}
		limit #{size} offset #{offset}
	</sql>
	
	<sql id="searchNoneType">
		from (
		    select id, title, content_type_id, addr, image, latitude, longitude, overview, popularity,
		           ROW_NUMBER() OVER (PARTITION BY content_type_id) AS row_num
		    FROM attraction
		    <include refid="keywordCondition"></include>
		) as sub
		where #{size} >= row_num
		order by content_type_id
	</sql>
	
	<sql id="keywordCondition">
		where (title like concat('%', #{keyword}, '%') 
		      or addr like concat('%', #{keyword}, '%'))
	</sql>
	
	<!-- 여행지 개수 조회 -->
	<select id="totalRow">
		select count(*)
		from attraction
	</select>
	
	<!-- id 기반 여행지 상세조회 -->
	<select id="searchById" parameterType="int" resultType="attraction">
		select id, title, content_type_id, addr, image, latitude, longitude, overview, popularity
		from attraction
		where id= #{id}
	</select>
    
    <select id="getPopularityRank" resultType="attraction">
    	select id, title, content_type_id, addr, image, latitude, longitude, overview, popularity
		from attraction
		order by popularity
		limit 10
    </select>

</mapper>